name: Build and Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [created, edited, published]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.12.2'
        host: ${{ runner.os }}
        target: 'desktop'

    - name: Configure Qt (macOS)
      if: runner.os == 'macOS'
      run: |
        echo "$(pwd)/Qt/5.12.2/clang_64/bin" >> $GITHUB_PATH

    - name: Configure Qt (Linux)
      if: runner.os == 'Linux'
      run: |
        echo "$(pwd)/Qt/5.12.2/gcc_64/bin" >> $GITHUB_PATH

    - name: Configure Qt (Windows)
      if: runner.os == 'Windows'
      run: |
        echo "$(pwd)/Qt/5.12.2/msvc2017_64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build (Linux & macOS)
      if: runner.os != 'Windows'
      run: |
        qmake
        make

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        qmake
        nmake

    - name: Deploy (Linux)
      if: runner.os == 'Linux'
      run: |
        mkdir -p appdir/usr/bin
        cp FloatingBall appdir/usr/bin/
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/bin/FloatingBall -appimage

    - name: Deploy (macOS)
      if: runner.os == 'macOS'
      run: |
        macdeployqt FloatingBall.app -dmg

    - name: Deploy (Windows)
      if: runner.os == 'Windows'
      run: |
        windeployqt release/FloatingBall.exe
        7z a FloatingBall-windows.zip release/

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          FloatingBall*.AppImage
          FloatingBall.dmg
          FloatingBall-windows.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
